// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Course{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  userId String
  description String?
  imageUrl String?
  price Float?
  isPublished Boolean @default(false)
  categoryId String?
  category Category? @relation(fields:[categoryId],references: [id],onDelete:Cascade)
  attachements Attachement[]
  createdAt DateTime @default(now())
  updated DateTime @updatedAt
  @@index([categoryId])

}

model Attachement{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  url String
  courseId String
  course Course @relation(fields:[courseId],references: [id],onDelete:Cascade)
  
  createdAt DateTime @default(now())
  updated DateTime @updatedAt
  @@index([courseId])
  
}

model Category{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  course Course[]
}

// model User{
//   id String @id @default(auto()) @map("_id") @db.ObjectId
//   name String?
//   email String? @unique
//   emailVerified DateTime?
//   image String?
//   hashedPassword String?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   favoriteIds String[] @db.ObjectId
//   accounts Account[] 
//   listing Listing[]
//   reservations Reservation[]
// }

// model Account{
//     id String @id @default(auto()) @map("_id") @db.ObjectId
//     userId String @db.ObjectId
//     type String
//     provider String
//     providerAccountId String
//     refresh_token String? @db.String
//     access_token String? @db.String
//     expires_at Int?
//     token_type String?
//     scope String?
//     id_token String? @db.String
//     session_state String?

//     user User @relation(fields:[userId],references:[id],onDelete:Cascade)
//     @@unique([provider,providerAccountId])
// }

// model Listing{
//    id String @id @default(auto()) @map("_id") @db.ObjectId
//    title String
//    description String
//    imageSrc String
//    createdAt DateTime @default(now())
//    category String
//    roomCount Int
//    bathRoomCount Int
//    guestCount Int
//    locationValue String
//    userId String @db.ObjectId
//    price Int
//    updatedAt DateTime @updatedAt
//    reservations Reservation[]
//    user User @relation(fields:[userId],references:[id],onDelete:Cascade)


// }

// model Reservation{
//    id String @id @default(auto()) @map("_id") @db.ObjectId
//    userId String @db.ObjectId
//    listingId String @db.ObjectId
//    startDate DateTime
//    endDate DateTime
//    totalPrice Int
//    createdAt DateTime @default(now())
//    user User @relation(fields:[userId],references:[id],onDelete:Cascade)
//    listing Listing @relation(fields:[listingId],references: [id],onDelete:Cascade)

   
// }
